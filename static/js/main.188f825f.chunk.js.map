{"version":3,"sources":["store/actions/actionsTypes.ts","components/MainInput/index.tsx","store/actions/actions.ts","components/RemoveButton/index.tsx","components/UpdateButton/index.tsx","components/SaveButton/index.tsx","components/TodoItem/index.tsx","components/TodoList/index.tsx","components/Spinner/index.tsx","store/selectors/getTodoSelector.ts","components/App/index.tsx","store/sagas/index.ts","store/store.ts","store/reducer/todosReducer.ts","index.tsx"],"names":["GET_TODOS","ADD_TODO","TOGGLE_TODO","REMOVE_TODO","UPDATE_TODO","IS_EDIT","MainInput","useState","value","setValue","dispatch","useDispatch","className","placeholder","onChange","e","target","type","onClick","todo","title","completed","id","Date","now","isEditing","payload","addTodo","xmlns","width","height","focusable","viewBox","stroke","strokeLinecap","strokeWidth","d","RemoveButton","removeTodo","fill","fillRule","UpdateButton","onToggleIsEditing","SaveButton","version","transform","points","connect","key","onToggleTodo","toggleTodo","toggleEditing","onUpdateTodo","updateTodo","content","button","checked","TodoList","todos","map","item","Spinner","style","margin","background","display","preserveAspectRatio","cx","cy","r","fillOpacity","attributeName","begin","values","keyTimes","dur","repeatCount","getTodoSelector","createSelector","state","App","useEffect","useSelector","length","loadTodos","worker","watcher","rootSaga","getTodos","a","fetch","response","json","data","console","log","call","todoWithExtraData","put","fork","takeEvery","sagaMiddleWare","createSagaMiddleware","rootReducer","combineReducers","action","filter","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.188f825f.chunk.js","sourcesContent":["export const GET_TODOS = \"TODO/GET_TODO\";\r\nexport const ADD_TODO = \"TODO/ADD_TODO\";\r\nexport const TOGGLE_TODO = \"TODO/TOGGLE_TODO\";\r\nexport const REMOVE_TODO = \"TODO/REMOVE_TODO\";\r\nexport const UPDATE_TODO = \"TODO/UPDATE_TODO\";\r\n\r\nexport const IS_EDIT = \"APP/ID_EDIT\";\r\n","import { SetStateAction, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { addTodo } from \"store/actions/actions\";\r\n\r\nimport { ITodo } from \"types\";\r\n\r\nimport \"./style.scss\";\r\n\r\nexport const MainInput = () => {\r\n  const [value, setValue] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeInput = (e: { target: { value: SetStateAction<string> } }) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const addBtn = () => {\r\n    const todo: ITodo = {\r\n      title: value,\r\n      completed: false,\r\n      id: Date.now(),\r\n      isEditing: false,\r\n    };\r\n\r\n    if (value !== \"\") {\r\n      dispatch(addTodo(todo));\r\n    }\r\n\r\n    setValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className='mainInput'>\r\n      <input\r\n        value={value}\r\n        className='mainInput__input'\r\n        placeholder='Enter smth...'\r\n        onChange={onChangeInput}\r\n      />\r\n\r\n      <button type='button' className='mainInput__button' onClick={addBtn}>\r\n        <svg\r\n          xmlns='http://www.w3.org/2000/svg'\r\n          width='20'\r\n          height='20'\r\n          focusable='false'\r\n          viewBox='0 0 12 12'\r\n        >\r\n          <path\r\n            stroke='#ffffff'\r\n            strokeLinecap='round'\r\n            strokeWidth='2'\r\n            d='M6 2v8m4-4H2'\r\n          />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import { SetStateAction } from \"react\";\r\n\r\nimport { ITodo } from \"../../types\";\r\n\r\nimport {\r\n  ADD_TODO,\r\n  GET_TODOS,\r\n  TOGGLE_TODO,\r\n  REMOVE_TODO,\r\n  UPDATE_TODO,\r\n  IS_EDIT,\r\n} from \"./actionsTypes\";\r\n\r\nexport function getTodos(payload: ITodo[]) {\r\n  return { type: GET_TODOS, payload };\r\n}\r\n\r\nexport function addTodo(todo: ITodo) {\r\n  return { type: ADD_TODO, payload: todo };\r\n}\r\n\r\nexport function toggleTodo(id: ITodo[\"id\"]) {\r\n  return { type: TOGGLE_TODO, payload: id };\r\n}\r\n\r\nexport function removeTodo(id: ITodo[\"id\"]) {\r\n  return { type: REMOVE_TODO, payload: id };\r\n}\r\n\r\nexport function updateTodo(\r\n  id: ITodo[\"id\"],\r\n  e: { target: { value: SetStateAction<string> } }\r\n) {\r\n  return { type: UPDATE_TODO, payload: id, value: e.target.value };\r\n}\r\n\r\nexport function toggleEditing(id: ITodo[\"id\"]) {\r\n  return { type: IS_EDIT, payload: id };\r\n}\r\n","import { useDispatch } from \"react-redux\";\r\n\r\nimport { removeTodo } from \"store/actions/actions\";\r\nimport { IId } from \"types\";\r\n\r\nimport \"styles.scss\";\r\n\r\nexport const RemoveButton: React.FC<IId> = ({ id }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const removeBtn = () => dispatch(removeTodo(id));\r\n\r\n  return (\r\n    <button type='button' className='button' onClick={removeBtn}>\r\n      <svg\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        width='30'\r\n        height='30'\r\n        fill='#ffffff'\r\n        viewBox='0 0 16 16'\r\n      >\r\n        <path d='M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z' />\r\n        <path\r\n          fillRule='evenodd'\r\n          d='M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z'\r\n        />\r\n      </svg>\r\n    </button>\r\n  );\r\n};\r\n","import { IMouseEvent } from \"types\";\r\n\r\nimport \"styles.scss\";\r\n\r\nexport const UpdateButton: React.FC<IMouseEvent> = ({ onToggleIsEditing }) => {\r\n  return (\r\n    <button type='button' className='button pink' onClick={onToggleIsEditing}>\r\n      <svg\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        width='30'\r\n        height='30'\r\n        fill='#ffffff'\r\n        viewBox='0 0 16 16'\r\n      >\r\n        <path d='m13.498.795.149-.149a1.207 1.207 0 1 1 1.707 1.708l-.149.148a1.5 1.5 0 0 1-.059 2.059L4.854 14.854a.5.5 0 0 1-.233.131l-4 1a.5.5 0 0 1-.606-.606l1-4a.5.5 0 0 1 .131-.232l9.642-9.642a.5.5 0 0 0-.642.056L6.854 4.854a.5.5 0 1 1-.708-.708L9.44.854A1.5 1.5 0 0 1 11.5.796a1.5 1.5 0 0 1 1.998-.001zm-.644.766a.5.5 0 0 0-.707 0L1.95 11.756l-.764 3.057 3.057-.764L14.44 3.854a.5.5 0 0 0 0-.708l-1.585-1.585z' />\r\n      </svg>\r\n    </button>\r\n  );\r\n};\r\n","import { IMouseEvent } from \"types\";\r\n\r\nimport \"styles.scss\";\r\n\r\nexport const SaveButton: React.FC<IMouseEvent> = ({ onToggleIsEditing }) => {\r\n  return (\r\n    <button type='button' className='button orange' onClick={onToggleIsEditing}>\r\n      <svg\r\n        width='30px'\r\n        height='30px'\r\n        viewBox='0 0 18 18'\r\n        version='1.1'\r\n        xmlns='http://www.w3.org/2000/svg'\r\n      >\r\n        <g\r\n          id='Icons'\r\n          stroke='none'\r\n          strokeWidth='1'\r\n          fill='none'\r\n          fillRule='evenodd'\r\n        >\r\n          <g id='Rounded' transform='translate(-443.000000, -1529.000000)'>\r\n            <g id='Content' transform='translate(100.000000, 1428.000000)'>\r\n              <g\r\n                id='-Round-/-Content-/-save_alt'\r\n                transform='translate(340.000000, 98.000000)'\r\n              >\r\n                <g>\r\n                  <polygon id='Path' points='0 0 24 0 24 24 0 24'></polygon>\r\n                  <path\r\n                    fill='#ffffff'\r\n                    d='M19,13 L19,18 C19,18.55 18.55,19 18,19 L6,19 C5.45,19 5,18.55 5,18 L5,13 C5,12.45 4.55,12 4,12 C3.45,12 3,12.45 3,13 L3,19 C3,20.1 3.9,21 5,21 L19,21 C20.1,21 21,20.1 21,19 L21,13 C21,12.45 20.55,12 20,12 C19.45,12 19,12.45 19,13 Z M13,12.67 L14.88,10.79 C15.27,10.4 15.9,10.4 16.29,10.79 C16.68,11.18 16.68,11.81 16.29,12.2 L12.7,15.79 C12.31,16.18 11.68,16.18 11.29,15.79 L7.7,12.2 C7.31,11.81 7.31,11.18 7.7,10.79 C8.09,10.4 8.72,10.4 9.11,10.79 L11,12.67 L11,4 C11,3.45 11.45,3 12,3 C12.55,3 13,3.45 13,4 L13,12.67 Z'\r\n                    id='🔹Icon-Color'\r\n                  ></path>\r\n                </g>\r\n              </g>\r\n            </g>\r\n          </g>\r\n        </g>\r\n      </svg>\r\n    </button>\r\n  );\r\n};\r\n","import { Dispatch, SetStateAction } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Action } from \"redux\";\r\n\r\nimport { RemoveButton } from \"components/RemoveButton\";\r\nimport { UpdateButton } from \"components/UpdateButton/\";\r\nimport { SaveButton } from \"components/SaveButton\";\r\n\r\nimport { toggleEditing, toggleTodo, updateTodo } from \"store/actions/actions\";\r\nimport { ITodo, ITodoItem, DispatchProps } from \"types\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst TodoItem: React.FC<ITodoItem & DispatchProps> = ({\r\n  onToggleTodo,\r\n  onToggleIsEditing,\r\n  onUpdateTodo,\r\n  todo: { id, title, completed, isEditing },\r\n}) => {\r\n  const content = isEditing ? (\r\n    <input className='todoItem__input' value={title} onChange={onUpdateTodo} />\r\n  ) : (\r\n    <p className='todoItem__text'>{title}</p>\r\n  );\r\n\r\n  const button = isEditing ? (\r\n    <SaveButton onToggleIsEditing={onToggleIsEditing} />\r\n  ) : (\r\n    <UpdateButton onToggleIsEditing={onToggleIsEditing} />\r\n  );\r\n\r\n  return (\r\n    <li className={completed && !isEditing ? \"todoItem completed\" : \"todoItem\"}>\r\n      <>\r\n        <input\r\n          className='todoItem__checkbox'\r\n          type='checkbox'\r\n          onChange={onToggleTodo}\r\n          checked={completed}\r\n        />\r\n      </>\r\n      {content}\r\n      <div className='todoItem__buttons'>\r\n        {button}\r\n        <RemoveButton id={id} />\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (\r\n  dispatch: Dispatch<Action>,\r\n  key: { todo: ITodo }\r\n) => {\r\n  const id: number = key.todo.id;\r\n\r\n  return {\r\n    onToggleTodo: () => {\r\n      dispatch(toggleTodo(id));\r\n    },\r\n    onToggleIsEditing: () => dispatch(toggleEditing(id)),\r\n    onUpdateTodo: (e: { target: { value: SetStateAction<string> } }) =>\r\n      dispatch(updateTodo(id, e)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(TodoItem);\r\n","import TodoItem from \"components/TodoItem\";\r\n\r\nimport { ITodoList, ITodo } from \"types\";\r\n\r\nexport const TodoList: React.FC<ITodoList> = ({ todos }) => {\r\n  return (\r\n    <ul>\r\n      {todos &&\r\n        todos.map((item: ITodo) => {\r\n          return <TodoItem key={item.id} todo={item} />;\r\n        })}\r\n    </ul>\r\n  );\r\n};\r\n","export const Spinner = () => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      style={{ margin: \"0 auto\", background: \"none\", display: \"block\" }}\n      width='200px'\n      height='200px'\n      viewBox='0 0 100 100'\n      preserveAspectRatio='xMidYMid'\n    >\n      <g transform='translate(80,50)'>\n        <g transform='rotate(0)'>\n          <circle cx='0' cy='0' r='7' fill='#1c4595' fillOpacity='1'>\n            <animateTransform\n              attributeName='transform'\n              type='scale'\n              begin='-0.875s'\n              values='1.5 1.5;1 1'\n              keyTimes='0;1'\n              dur='1s'\n              repeatCount='indefinite'\n            ></animateTransform>\n            <animate\n              attributeName='fillOpacity'\n              keyTimes='0;1'\n              dur='1s'\n              repeatCount='indefinite'\n              values='1;0'\n              begin='-0.875s'\n            ></animate>\n          </circle>\n        </g>\n      </g>\n      <g transform='translate(71.21320343559643,71.21320343559643)'>\n        <g transform='rotate(45)'>\n          <circle cx='0' cy='0' r='7' fill='#1c4595' fillOpacity='0.875'>\n            <animateTransform\n              attributeName='transform'\n              type='scale'\n              begin='-0.75s'\n              values='1.5 1.5;1 1'\n              keyTimes='0;1'\n              dur='1s'\n              repeatCount='indefinite'\n            ></animateTransform>\n            <animate\n              attributeName='fillOpacity'\n              keyTimes='0;1'\n              dur='1s'\n              repeatCount='indefinite'\n              values='1;0'\n              begin='-0.75s'\n            ></animate>\n          </circle>\n        </g>\n      </g>\n      <g transform='translate(50,80)'>\n        <g transform='rotate(90)'>\n          <circle cx='0' cy='0' r='7' fill='#1c4595' fillOpacity='0.75'>\n            <animateTransform\n              attributeName='transform'\n              type='scale'\n              begin='-0.625s'\n              values='1.5 1.5;1 1'\n              keyTimes='0;1'\n              dur='1s'\n              repeatCount='indefinite'\n            ></animateTransform>\n            <animate\n              attributeName='fillOpacity'\n              keyTimes='0;1'\n              dur='1s'\n              repeatCount='indefinite'\n              values='1;0'\n              begin='-0.625s'\n            ></animate>\n          </circle>\n        </g>\n      </g>\n      <g transform='translate(28.786796564403577,71.21320343559643)'>\n        <g transform='rotate(135)'>\n          <circle cx='0' cy='0' r='7' fill='#1c4595' fillOpacity='0.625'>\n            <animateTransform\n              attributeName='transform'\n              type='scale'\n              begin='-0.5s'\n              values='1.5 1.5;1 1'\n              keyTimes='0;1'\n              dur='1s'\n              repeatCount='indefinite'\n            ></animateTransform>\n            <animate\n              attributeName='fillOpacity'\n              keyTimes='0;1'\n              dur='1s'\n              repeatCount='indefinite'\n              values='1;0'\n              begin='-0.5s'\n            ></animate>\n          </circle>\n        </g>\n      </g>\n      <g transform='translate(20,50.00000000000001)'>\n        <g transform='rotate(180)'>\n          <circle cx='0' cy='0' r='7' fill='#1c4595' fillOpacity='0.5'>\n            <animateTransform\n              attributeName='transform'\n              type='scale'\n              begin='-0.375s'\n              values='1.5 1.5;1 1'\n              keyTimes='0;1'\n              dur='1s'\n              repeatCount='indefinite'\n            ></animateTransform>\n            <animate\n              attributeName='fillOpacity'\n              keyTimes='0;1'\n              dur='1s'\n              repeatCount='indefinite'\n              values='1;0'\n              begin='-0.375s'\n            ></animate>\n          </circle>\n        </g>\n      </g>\n      <g transform='translate(28.78679656440357,28.786796564403577)'>\n        <g transform='rotate(225)'>\n          <circle cx='0' cy='0' r='7' fill='#1c4595' fillOpacity='0.375'>\n            <animateTransform\n              attributeName='transform'\n              type='scale'\n              begin='-0.25s'\n              values='1.5 1.5;1 1'\n              keyTimes='0;1'\n              dur='1s'\n              repeatCount='indefinite'\n            ></animateTransform>\n            <animate\n              attributeName='fillOpacity'\n              keyTimes='0;1'\n              dur='1s'\n              repeatCount='indefinite'\n              values='1;0'\n              begin='-0.25s'\n            ></animate>\n          </circle>\n        </g>\n      </g>\n      <g transform='translate(49.99999999999999,20)'>\n        <g transform='rotate(270)'>\n          <circle cx='0' cy='0' r='7' fill='#1c4595' fillOpacity='0.25'>\n            <animateTransform\n              attributeName='transform'\n              type='scale'\n              begin='-0.125s'\n              values='1.5 1.5;1 1'\n              keyTimes='0;1'\n              dur='1s'\n              repeatCount='indefinite'\n            ></animateTransform>\n            <animate\n              attributeName='fillOpacity'\n              keyTimes='0;1'\n              dur='1s'\n              repeatCount='indefinite'\n              values='1;0'\n              begin='-0.125s'\n            ></animate>\n          </circle>\n        </g>\n      </g>\n      <g transform='translate(71.21320343559643,28.78679656440357)'>\n        <g transform='rotate(315)'>\n          <circle cx='0' cy='0' r='7' fill='#1c4595' fillOpacity='0.125'>\n            <animateTransform\n              attributeName='transform'\n              type='scale'\n              begin='0s'\n              values='1.5 1.5;1 1'\n              keyTimes='0;1'\n              dur='1s'\n              repeatCount='indefinite'\n            ></animateTransform>\n            <animate\n              attributeName='fillOpacity'\n              keyTimes='0;1'\n              dur='1s'\n              repeatCount='indefinite'\n              values='1;0'\n              begin='0s'\n            ></animate>\n          </circle>\n        </g>\n      </g>\n    </svg>\n  );\n};\n","import { createSelector } from \"reselect\";\r\n\r\nimport { RootState } from \"store/store\";\r\n\r\nconst selectTodos = (state: RootState) => state.todos;\r\n\r\nexport const getTodoSelector = createSelector([selectTodos], (todos) => todos);\r\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { MainInput } from \"components/MainInput/\";\nimport { TodoList } from \"components/TodoList\";\nimport { Spinner } from \"components/Spinner\";\n\nimport { getTodoSelector } from \"store/selectors/getTodoSelector\";\n\nimport \"./style.scss\";\n\nexport const App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch({ type: \"LOAD_DATA\" });\n  }, [dispatch]);\n\n  const todos = useSelector(getTodoSelector);\n\n  return (\n    <div className='app'>\n      <MainInput />\n      {todos.length ? <TodoList todos={todos} /> : <Spinner />}\n    </div>\n  );\n};\n","import { call, fork, takeEvery, put } from \"redux-saga/effects\";\r\n\r\nimport { GET_TODOS } from \"store/actions/actionsTypes\";\r\nimport { ITodo } from \"types\";\r\n\r\nconst getTodos = async () => {\r\n  try {\r\n    const response = await fetch(\r\n      \"https://jsonplaceholder.typicode.com/todos/?_limit=6\"\r\n    );\r\n    const data: Promise<Response> = await response.json();\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nfunction* loadTodos() {\r\n  const todos: ITodo[] = yield call(getTodos);\r\n\r\n  const todoWithExtraData = todos.map((todo: ITodo) => ({\r\n    ...todo,\r\n    isEditing: false,\r\n  }));\r\n\r\n  yield put({ type: GET_TODOS, payload: todoWithExtraData });\r\n}\r\n\r\nfunction* worker() {\r\n  yield fork(loadTodos);\r\n}\r\n\r\nfunction* watcher() {\r\n  yield takeEvery(\"LOAD_DATA\", worker);\r\n}\r\n\r\nexport function* rootSaga() {\r\n  yield fork(watcher);\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"@redux-saga/core\";\r\n\r\nimport { todosReducer } from \"store/reducer/todosReducer\";\r\n\r\nimport { rootSaga } from \"./sagas\";\r\n\r\nconst sagaMiddleWare = createSagaMiddleware();\r\n\r\nconst rootReducer = combineReducers({\r\n  todos: todosReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleWare))\r\n);\r\n\r\nsagaMiddleWare.run(rootSaga);\r\n","import { AnyAction } from \"redux\";\r\n\r\nimport { ITodo } from \"types\";\r\nimport {\r\n  ADD_TODO,\r\n  REMOVE_TODO,\r\n  GET_TODOS,\r\n  TOGGLE_TODO,\r\n  UPDATE_TODO,\r\n  IS_EDIT,\r\n} from \"store/actions/actionsTypes\";\r\n\r\nexport const todosReducer = (state: ITodo[] = [], action: AnyAction) => {\r\n  switch (action.type) {\r\n    case GET_TODOS: {\r\n      return [...state, ...action.payload];\r\n    }\r\n    case ADD_TODO: {\r\n      return [...state, action.payload];\r\n    }\r\n    case REMOVE_TODO: {\r\n      return [...state.filter((todo) => todo.id !== action.payload)];\r\n    }\r\n    case TOGGLE_TODO: {\r\n      return state.map((todo) =>\r\n        todo.id === action.payload\r\n          ? { ...todo, completed: !todo.completed }\r\n          : todo\r\n      );\r\n    }\r\n    case UPDATE_TODO: {\r\n      return state.map((todo) =>\r\n        todo.id === action.payload ? { ...todo, title: action.value } : todo\r\n      );\r\n    }\r\n    case IS_EDIT: {\r\n      return state.map((todo) =>\r\n        todo.id === action.payload\r\n          ? { ...todo, isEditing: !todo.isEditing }\r\n          : todo\r\n      );\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { App } from \"./components/App\";\n\nimport { store } from \"./store/store\";\n\nimport \"./styles.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}